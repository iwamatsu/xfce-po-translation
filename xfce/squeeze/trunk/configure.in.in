dnl
dnl Copyright (c) 2006
dnl         The Xfce development team. All rights reserved.
dnl
dnl Originally written for Xfce by Benedikt Meurer <benny@xfce.org>
dnl Modified by Stephan Arts <stephan@xfce.org>
dnl

dnl ***************************
dnl *** Version information ***
dnl ***************************
m4_define([squeeze_verinfo], [0:3:0])
m4_define([squeeze_version_branch], [])
m4_define([squeeze_version_major], [0])
m4_define([squeeze_version_minor], [2])
m4_define([squeeze_version_micro], [90])
m4_define([squeeze_version_nano], []) # Leave empty for no nano version
m4_define([squeeze_version_build], [r@REVISION@])
m4_define([squeeze_version_tag], [svn]) # Leave empty for releases
m4_define([squeeze_version], [ifelse(squeeze_version_branch(), [], [squeeze_version_major().squeeze_version_minor().squeeze_version_micro()ifelse(squeeze_version_nano(), [], [], [.squeeze_version_nano()])], [squeeze_version_branch()])ifelse(squeeze_version_tag(),[],[], [-ifelse(squeeze_version_tag(), [svn], [squeeze_version_tag()-squeeze_version_build()], [squeeze_version_tag()])])])

dnl *******************************************
dnl *** Debugging support for SVN snapshots ***
dnl *******************************************
m4_define([squeeze_debug_default], [ifelse(squeeze_version_tag(), [svn], [full], [no])])

AC_COPYRIGHT([Copyright (c) 2006
        The Xfce development team. All rights reserved.

Written for Xfce by Stephan Arts <stephan@xfce.org>.])

AC_INIT([Squeeze], [squeeze_version], [http://bugzilla.xfce.org/])
AC_PREREQ([2.50])

SQUEEZE_VERSION=squeeze_version
AM_INIT_AUTOMAKE([1.8 dist-bzip2 tar-ustar])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE

SQUEEZE_VERINFO=squeeze_verinfo
AC_SUBST(SQUEEZE_VERINFO)

dnl check for UNIX variants
AC_AIX
AC_ISC_POSIX
AC_MINIX
AM_CONDITIONAL([HAVE_CYGWIN], [test "`uname | grep \"CYGWIN\"`" != ""])


dnl check for standard header files
AC_PROG_CC
AC_PROG_LIBTOOL
AC_PROG_INTLTOOL([0.31], [no-xml])

AC_HEADER_STDC
AC_SYS_LARGEFILE
CPPFLAGS="$CPPFLAGS -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES"


GTK_DOC_CHECK([1.0])


dnl Check for i18n support
XDT_I18N([@LINGUAS@])


XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [2.6.0])
XDT_CHECK_PACKAGE([GLIB], [glib-2.0], [2.6.0])
XDT_CHECK_PACKAGE([GOBJECT], [gobject-2.0], [2.6.0])
XDT_CHECK_PACKAGE([THUNAR_VFS], [thunar-vfs-1], [0.4.0])
XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.4.0])
XDT_CHECK_PACKAGE([DBUS], [dbus-glib-1], [0.34])

AC_DEFINE([HAVE_LIBXFCE4UTIL], [1], [Define if we have libxfce4util (will become optional eventually)])
AC_DEFINE([EXO_API_SUBJECT_TO_CHANGE], [1], [Define we understand libexo is subject to api churn])
dnl Some distro's have dbus < 1.0, need to define the following to make it compile. (Squeeze depends on the glib-bindings anyways)
AC_DEFINE([DBUS_API_SUBJECT_TO_CHANGE], [1], [Define we understand dbus is subject to api churn])


dnl XDT_CHECK_OPTIONAL_PACKAGE([THUNAR_VFS], [thunar-vfs-1], [0.4.0], [thunar-vfs],
dnl    AC_HELP_STRING([--disable-thunar-vfs],
dnl                   [Disable the use of Thunar's VFS layer)]))

dnl XDT_CHECK_OPTIONAL_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.3.99], [libxfce4util],
dnl    AC_HELP_STRING([--disable-libxfce4util],
dnl                   [Disable the use of libxfce4util)]))

AC_ARG_ENABLE([pathbar],
   [AC_HELP_STRING([--disable-pathbar], 
        [Do not compile support for a PathBar (default=enabled)])],
        [sq_pathbar=$enableval], 
        [sq_pathbar=yes])
if test "$sq_pathbar" = "yes"; then
	AC_DEFINE([ENABLE_PATHBAR], [1], [Define if we should include pathbar support])
fi
AM_CONDITIONAL([ENABLE_PATHBAR], [test "$sq_pathbar" = "yes"])

AC_ARG_ENABLE([toolbar],
   [AC_HELP_STRING([--disable-toolbar], 
        [Do not compile support for a ToolBar (default=enabled)])],
        [sq_toolbar=$enableval], 
        [sq_toolbar=yes])
if test "$sq_toolbar" = "yes"; then
	AC_DEFINE([ENABLE_TOOLBAR], [1], [Define if we should include toolbar support])
fi
AM_CONDITIONAL([ENABLE_TOOLBAR], [test "$sq_toolbar" = "yes"])

AC_ARG_ENABLE([iter-slices],
   [AC_HELP_STRING([--disable-iter-slices], 
        [Use LSQArchiveIter slices (default=enabled)])],
        [lsq_iter_slices=$enableval], 
        [lsq_iter_slices=yes])
if test "$lsq_iter_slices" = "yes"; then
	AC_DEFINE([USE_LSQITER_SLICES], [1], [Define if we should use LSQArchiveIter slices])
fi

AC_ARG_ENABLE([gslices],
   [AC_HELP_STRING([--enable-gslices], 
        [Use GSlices (default=disabled)])],
        [lsq_gslices=$enableval], 
        [lsq_gslices=no])
if test "$lsq_gslices" = "yes"; then
	AC_DEFINE([USE_GSLICES], [1], [Define if we should use GSlices])
fi

dnl check for debugging support
XDT_FEATURE_DEBUG

AC_OUTPUT([
Makefile
po/Makefile.in
src/Makefile
libsqueeze/Makefile
icons/Makefile
icons/16x16/Makefile
icons/48x48/Makefile
icons/scalable/Makefile
pixmaps/Makefile
data/Makefile
docs/Makefile
docs/reference/Makefile
docs/reference/libsqueeze/Makefile
docs/reference/libsqueeze/version.xml
])

echo "----------------------------------------"
echo "$PACKAGE $VERSION"
echo ""
echo "The binary will be installed in $prefix/bin"
echo ""
echo "Configure finished, type 'make' to build."
